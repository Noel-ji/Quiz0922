plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// 웹 서비스를 구축하는 데 필요한 핵심 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	
	// H2 데이터베이스 라이브러리
	runtimeOnly 'com.h2database:h2'
	
	// 개발 시 코드 변경을 감지하고 애플리케이션을 자동으로 다시 시작
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// 템플릿 엔진인 타임리프를 사용하기 위한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	
	// lombok 라이브러리
	compileOnly 'org.projectlombok:lombok' 
	annotationProcessor 'org.projectlombok:lombok' 
	
	// JPA를 사용하기 위한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' 
	
	// JUnit 테스트 프레임워크 관련 라이브러리
	testImplementation 'org.junit.jupiter:junit-jupiter' 
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// 사용자 입력 데이터의 유효성을 검사하는 데 필요한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	// 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	
	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	
	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
}

tasks.named('test') {
	useJUnitPlatform()
}
